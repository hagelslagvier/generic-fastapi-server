[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Alexey Naumov"]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.104.1"
uvicorn = "^0.24.0.post1"
pydantic = "^2.5.2"
sqlalchemy = "^2.0.27"
alembic = "^1.13.0"
injector = "^0.21.0"
python-dotenv = "^1.0.1"
psycopg2-binary = "^2.9.9"
email-validator = "^2.2.0"
psutil = "^6.0.0"
pyjwt = "^2.10.1"
python-multipart = "^0.0.18"
typer = "^0.15.1"
inzicht = "^0.1.10"


[tool.poetry.group.dev.dependencies]
viztracer = "^0.16.3"
memray = "^1.13.4"
mypy = "^1.7.0"
types-psutil = "^6.0.0.20240621"
ruff = "^0.1.6"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
httpx = "^0.26.0"
pytest-alembic = "^0.11.1"
pyupgrade = "^3.18.0"
sqlalchemy-schemadisplay = "^2.0"
freezegun = "^1.5.1"

[tool.ruff]
extend-select = ["I"]
line-length = 88

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]
disable_error_code = ["type-abstract"]

[tool.coverage.run]
source = ["app"]
omit = [
    "app/database/utils/*",
    "app/run.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "def __repr__",
    "def __str__",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
